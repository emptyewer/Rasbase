(function() {	// getElementById	function $id(id) {		return document.getElementById(id);	}	function formatBytes(bytes,decimals) {   if(bytes == 0) return '0 Bytes';   var k = 1000,       dm = decimals + 1 || 3,       sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'],       i = Math.floor(Math.log(bytes) / Math.log(k));   return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];	}	// file drag hover	function FileDragHover(e) {		e.stopPropagation();		e.preventDefault();		e.target.className = (e.type == "dragover" ? "hover" : "");		$("#drop_well").addClass("well-hover text-muted text-center");	}	// file selection	function FileDropHandler(e) {		// cancel event and hover styling		FileDragHover(e);		// fetch FileList object		var files = e.dataTransfer.files;		if (files[0].type == "application/json") {			$("#drop_well").html("<i class='fa fa-refresh fa-spin' style='font-size: 4rem'></i><h3>Uploading</h3>");			ShowFileInfo(files[0], 1);			DisplayResults(files[0]);    }    else {			ShowFileInfo(files[0], 0);			RestoreHover();		}	}	function HideShowHouseKeeping() {		$("#footer-panel").fadeOut();		$("#drop_well").fadeOut();		$("#import-table-well").fadeIn().show();  }  function RestoreHover() {		$("#drop_well").removeClass("well-hover text-muted text-center");		$("#drop_well").addClass("well text-muted text-center");		$("#drop_well_icon").removeClass("fa fa-upload");		$("#drop_well_icon").addClass("fa fa-upload");	}	// output file information	function ShowFileInfo(file, tag) {		if (tag == 1) {			$("#import-table-header").html("Reading from file: <strong>" + file.name + "</strong>");      var text = "File: <strong>" + file.name +        "</strong> of type: <strong>" + file.type +        "</strong> size: <strong>" + formatBytes(file.size) +        "</strong>";      $("#topalert").html(text);      $("#topalert").removeClass("alert alert-danger");      $("#topalert").addClass("alert alert-success");      $("#topalert").show().delay(5000).fadeOut();    }    else {			var text = "<strong>Only .json files are accepted for upload.</strong>";      $("#topalert").html(text);      $("#topalert").removeClass("alert alert-success");      $("#topalert").addClass("alert alert-danger");      $("#topalert").show().delay(5000).fadeOut();		}	}	function truncate(n, len) {      var ext = n.substring(n.lastIndexOf(".") + 1, n.length).toLowerCase();      var filename = n.replace('.'+ext,'');      if(filename.length <= len) {          return n;      }      filename = filename.substr(0, len) + (n.length > len ? '..' : '');      return filename;  };	function return_na(value) {		if (value == '-1') {			return "N/A";		}		else {			return value;		}	}	function DisplayResults(file) {    var reader = new FileReader();		reader.onload = function() {				//reader.result,				console.log(reader.result.length);		};		reader.onerror = function() {				alert("Could not read the file");				CancelledHandler();		};		reader.onprogress = function(file) {			if (file.lengthComputable) {					var progress = parseInt(((file.loaded / file.total) * 100), 10);					console.log(progress);					// document.getElementById('label').innerHTML = progress;			}		};		reader.onloadend = function () {			HideShowHouseKeeping();			RestoreHover();			var json_text = JSON.parse(reader.result);			var dataSet = [];			var selbait = [];			var nonselbait = [];			for (var key in json_text.genes) {				node = json_text.genes[key];				dataSet.push([node.name, node.stats[0], node.stats[1], node.stats[2], node.stats[3], node.stats[5]]);				selbait.push([node.name].concat(node.selected.junction_stats.slice(0,6)));				nonselbait.push([node.name].concat(node.non_selected.junction_stats.slice(0,6)));			}			$("#import-table").DataTable({					"data": dataSet,          "formatNumber": function (toFormat) {            return toFormat.toString().replace(              /\B(?=(\d{3})+(?!\d))/g, "'"            );          },          "columns": [            {},            {              "render": $.fn.dataTable.render.number(',', '.', 2)            },						{              "render": $.fn.dataTable.render.number(',', '.', 2)            },            {              "render": $.fn.dataTable.render.number(',', '.', 2)            },            {              "render": $.fn.dataTable.render.number(',', '.', 2)            },            {}          ],          "order": [[5, 'dsc']]			});			$('#import-table_paginate').addClass('text-right');			$('#import-table_filter').addClass('text-right');			$("#bait-sel-junctions-table").DataTable({        "data": selbait,				"lengthChange": false,				"info": false,				"pagingType": "simple",				"compact":true,				"searching": false,				"ordering": false      });			$('#bait-nonsel-junctions-table').DataTable({					"data": nonselbait,					"lengthChange": false,					"info": false,					"pagingType": "simple",					"searching": false,					"ordering": false			});			$('#bait-sel-junctions-table_length label').hide();			$('#bait-nonsel-junctions-table_length label').hide();			$('#bait-sel-junctions-table_paginate').addClass('text-right');			$('#bait-sel-junctions-table_filter').addClass('text-right');			$('#bait-nonsel-junctions-table_paginate').addClass('text-right');			$('#bait-nonsel-junctions-table_filter').addClass('text-right');    };		reader.readAsText(file);	}	function CancelledHandler() {		console.log("Cancelled");		location.reload();  }	// initialize	function Init() {		var filedrag = $id("drop_well");		var cancelbutton = $id("cancel-button");		// file select		cancelbutton.addEventListener("click", CancelledHandler, false);		// is XHR2 available?		var xhr = new XMLHttpRequest();		if (xhr.upload) {			// file drop			filedrag.addEventListener("dragover", FileDragHover, false);			filedrag.addEventListener("dragleave", FileDragHover, false);			filedrag.addEventListener("drop", FileDropHandler, false);			filedrag.style.display = "block";			// remove submit button			// submitbutton.style.display = "none";		}	}	// call initialization file	if (window.File && window.FileList && window.FileReader) {		Init();		$("#import-table-well").hide();		$("#pbar").hide();		$("#topalert").hide();	}})();